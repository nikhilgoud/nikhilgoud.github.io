{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","React","useState","dateRange","setDateRange","openPicker","setOpenPicker","theme","useTheme","togglePicker","StyledEngineProvider","injectFirst","ThemeProvider","className","Grid","container","item","xs","onChange","range","Button","onClick","style","maxWidth","minWidth","open","toggle","initialDateRange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA+CeA,MAzCf,WACE,MAAkCC,IAAMC,SAAoB,IAA5D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,IAAMC,UAAkB,GAA5D,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAQC,cAERC,EAAe,kBAAMH,GAAeD,IAC1C,OACE,cAACK,EAAA,EAAD,CAAsBC,aAAW,EAAjC,SACE,cAACC,EAAA,EAAD,CAAeL,MAAOA,EAAtB,SACE,sBAAKM,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,kBAAD,CAAiBd,UAAWA,EAAWe,SAAU,SAACC,GAAD,OAAWf,EAAae,QAE3E,cAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,SAGnB,sBAAKJ,UAAU,YAAf,UACE,eAACO,EAAA,EAAD,CAAQC,QAASZ,EAAjB,UAAgCJ,EAAa,SAAW,QAAxD,uBACA,eAACS,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGK,MAAO,CAAEC,SAAU,IAAKC,SAAU,KAApD,SACE,cAAC,kBAAD,CACEC,KAAMpB,EACNqB,OAAQjB,EACRkB,iBAAkBxB,EAClBe,SAAU,SAACC,GAAD,OAAWf,EAAae,QAGtC,cAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,kBCxBdW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf651d22.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { DateRangePicker, DateRange, DateRangeEditor } from 'material-mui-date-range-picker';\nimport { ThemeProvider, StyledEngineProvider, useTheme } from '@mui/material/styles';\nimport { Button, Grid } from '@mui/material';\n\nfunction App() {\n  const [dateRange, setDateRange] = React.useState<DateRange>({});\n  const [openPicker, setOpenPicker] = React.useState<boolean>(true);\n\n  const theme = useTheme();\n\n  const togglePicker = () => setOpenPicker(!openPicker);\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div className='App'>\n          <div className='container'>\n            <Grid container>\n              <Grid item xs={4} />\n              <Grid item xs={4}>\n                <DateRangeEditor dateRange={dateRange} onChange={(range) => setDateRange(range)} />\n              </Grid>\n              <Grid item xs={4} />\n            </Grid>\n          </div>\n          <div className='container'>\n            <Button onClick={togglePicker}>{openPicker ? 'Close ' : 'Open '} Daterange Picker</Button>\n            <Grid container>\n              <Grid item xs={3} />\n              <Grid item xs={6} style={{ maxWidth: 700, minWidth: 690 }}>\n                <DateRangePicker\n                  open={openPicker}\n                  toggle={togglePicker}\n                  initialDateRange={dateRange}\n                  onChange={(range) => setDateRange(range)}\n                />\n              </Grid>\n              <Grid item xs={3} />\n            </Grid>\n          </div>\n        </div>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}